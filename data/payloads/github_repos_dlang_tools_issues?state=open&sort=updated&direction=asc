[
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/340",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/340/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/340/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/340/events",
    "html_url": "https://github.com/dlang/tools/pull/340",
    "id": 307818936,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc2OTEyODA4",
    "number": 340,
    "title": "rdmd_test: simplify flag for specifying default compiler",
    "user": {
      "login": "WebDrake",
      "id": 125075,
      "node_id": "MDQ6VXNlcjEyNTA3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/125075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WebDrake",
      "html_url": "https://github.com/WebDrake",
      "followers_url": "https://api.github.com/users/WebDrake/followers",
      "following_url": "https://api.github.com/users/WebDrake/following{/other_user}",
      "gists_url": "https://api.github.com/users/WebDrake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WebDrake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WebDrake/subscriptions",
      "organizations_url": "https://api.github.com/users/WebDrake/orgs",
      "repos_url": "https://api.github.com/users/WebDrake/repos",
      "events_url": "https://api.github.com/users/WebDrake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WebDrake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-22T21:20:02Z",
    "updated_at": "2018-03-22T22:18:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/dlang/tools/pulls/340",
      "html_url": "https://github.com/dlang/tools/pull/340",
      "diff_url": "https://github.com/dlang/tools/pull/340.diff",
      "patch_url": "https://github.com/dlang/tools/pull/340.patch"
    },
    "body": "Since it seems there are some use-cases where it is unavoidable to run `rdmd_test` directly, it's nice if we can reduce the amount of typing required to do so.\r\n\r\nBesides the rdmd executable itself, the only other obligatory argument to the test suite is the default compiler expected to be used by rdmd.  This patch shortens the long option to `--default-compiler` and allows an equivalent single-character `-D` option, so that usage can now be of the form:\r\n\r\n    rdmd_test -D <default-compiler> <path-to-rdmd-executable>\r\n\r\nThe `posix.mak` and `win32.mak` makefiles have been updated accordingly.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/317",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/317/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/317/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/317/events",
    "html_url": "https://github.com/dlang/tools/pull/317",
    "id": 296612638,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4NzUzMTU5",
    "number": 317,
    "title": "rdmd:  and  with a last statement without effect should print it",
    "user": {
      "login": "wilzbach",
      "id": 4370550,
      "node_id": "MDQ6VXNlcjQzNzA1NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4370550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilzbach",
      "html_url": "https://github.com/wilzbach",
      "followers_url": "https://api.github.com/users/wilzbach/followers",
      "following_url": "https://api.github.com/users/wilzbach/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilzbach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilzbach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilzbach/subscriptions",
      "organizations_url": "https://api.github.com/users/wilzbach/orgs",
      "repos_url": "https://api.github.com/users/wilzbach/repos",
      "events_url": "https://api.github.com/users/wilzbach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilzbach/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 548182088,
        "node_id": "MDU6TGFiZWw1NDgxODIwODg=",
        "url": "https://api.github.com/repos/dlang/tools/labels/PR.Blocked",
        "name": "PR.Blocked",
        "color": "000000",
        "default": false,
        "description": "A PR blocker by another issue / PR, external to the PR (as opposed to WIP)"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 21,
    "created_at": "2018-02-13T04:45:54Z",
    "updated_at": "2018-03-26T19:49:25Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/dlang/tools/pulls/317",
      "html_url": "https://github.com/dlang/tools/pull/317",
      "diff_url": "https://github.com/dlang/tools/pull/317.diff",
      "patch_url": "https://github.com/dlang/tools/pull/317.patch"
    },
    "body": "tl;dr: @WebDrake recently changed the `rdmd` to automatically add semicolons for the last statement without effect (https://github.com/dlang/tools/pull/303), but I think we can do a bit better and make `rdmd` even more user-friendly.\r\n\r\n------------------------------------------------\r\n\r\nAt the moment we are in the unique position to introduce this without any breakage as until now `rdmd` didn't allow this:\r\n\r\n```\r\n> rdmd --eval='\"hello\"'\r\n/tmp/.rdmd-1000/eval.CFD785092747553A81673B51A318D6AE.d(18): Error: \"hello\" has no effect\r\n```\r\n------------------------------------------------\r\n\r\nThe new behavior will default to `writeln` if the last statement would have no effect:\r\n\r\n```\r\n> rdmd --eval=\"hello\"\r\nhello\r\n```\r\n\r\nA few more examples:\r\n\r\n$(H4 Use `rdmd` as your calculator)\r\n\r\n```\r\n> rdmd --eval=\"2 + 2\"\r\n4\r\n```\r\n\r\n```\r\n> rdmd --loop='line.splitter(\",\").take(1)'\r\n16\r\n```\r\n\r\n```\r\n> seq 5 | rdmd --loop='stdin.byLine.drop(2).joiner(newline)'\r\n2\r\n3\r\n4\r\n5\r\n```\r\n\r\n...\r\n\r\n------------------------------------------------\r\n\r\nI'm aware that this is a \"poor man's solution\" and could be done better, but look at it this way:\r\n- it doesn't break any code\r\n- it's a 6 LoC change (imports and tests not counted)\r\n- it covers >95% of all uses\r\n- it increases the user-friendliness of `rdmd` and people who use it like `perl`'s eval\r\n\r\n### Q: Oh come on, people can just type `writeln` themselves\r\n\r\nYes of course, but for CLI tools every keystroke matters and REPLs print to stdout.\r\nAlso it's a nice default for these two specific flags (in comparison to the hard error).\r\n\r\nCC @CyberShadow @marler8997 @WebDrake @andralex",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/350",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/350/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/350/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/350/events",
    "html_url": "https://github.com/dlang/tools/pull/350",
    "id": 321036514,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg2NTIyMjc0",
    "number": 350,
    "title": "rdmd: Add --objdir option",
    "user": {
      "login": "CyberShadow",
      "id": 160894,
      "node_id": "MDQ6VXNlcjE2MDg5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/160894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CyberShadow",
      "html_url": "https://github.com/CyberShadow",
      "followers_url": "https://api.github.com/users/CyberShadow/followers",
      "following_url": "https://api.github.com/users/CyberShadow/following{/other_user}",
      "gists_url": "https://api.github.com/users/CyberShadow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CyberShadow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CyberShadow/subscriptions",
      "organizations_url": "https://api.github.com/users/CyberShadow/orgs",
      "repos_url": "https://api.github.com/users/CyberShadow/repos",
      "events_url": "https://api.github.com/users/CyberShadow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CyberShadow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2018-05-08T04:12:33Z",
    "updated_at": "2018-05-24T10:11:18Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/dlang/tools/pulls/350",
      "html_url": "https://github.com/dlang/tools/pull/350",
      "diff_url": "https://github.com/dlang/tools/pull/350.diff",
      "patch_url": "https://github.com/dlang/tools/pull/350.patch"
    },
    "body": "Sometimes, when messing with various toolchains / debugging linking problems, it's useful to look at the object files generated by the compiler.\r\n\r\nCurrently, rdmd unconditionally places them in a temporary directory, and (also unconditionally) deletes them on exit. `-od` is never passed on to the compiler, instead it's usurped by rdmd to specify the location where to place the final executable.\r\n\r\nThis introduces a new switch which allows specifying a custom directory to place object files in.\r\nA check was already present to ensure we don't clean up a directory outside the temporary work directory (which might contain other files), which previously apparently only had an effect with `-lib` (due to a workaround for how `dmd` parses `-lib` paths).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/391",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/391/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/391/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/391/events",
    "html_url": "https://github.com/dlang/tools/issues/391",
    "id": 597164298,
    "node_id": "MDU6SXNzdWU1OTcxNjQyOTg=",
    "number": 391,
    "title": "rdmd test-case for pragma(lib) support is incompatible with GDC",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970671223,
        "node_id": "MDU6TGFiZWwxOTcwNjcxMjIz",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.POSIX",
        "name": "OS.POSIX",
        "color": "B4FA53",
        "default": false,
        "description": "Related to a POSIX-specific behavior (e.g. Linux/Mac/Solaris...)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-09T09:54:56Z",
    "updated_at": "2020-04-09T09:54:56Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18421\r\n\r\nUser @WebDrake reported (2018-02-11 15:21:59 CET):\r\n> `rdmd_test` includes a test-case to ensure that `rdmd` works for programs that use `pragma(lib)` to load libraries (see https://issues.dlang.org/show_bug.cgi?id=16978 for the motivation).  The correctness sought here is not in any direct handling of `pragma(lib)`, but in ensuring that the way `rdmd` invokes the D compiler will allow the `pragma(lib)` call to succeed.  Since GDC does not support `pragma(lib)`, the test case will fail when `gdmd` is used as the D compiler invoked by `rdmd`.  As this is a fault in the compiler rather than `rdmd`, the test case can simply be disabled when testing with `gdmd` (since from `rdmd`'s point of view, it suffices to demonstrate that it works with D compilers that support `pragma(lib)`).  However, this is merely a workaround, not a fix.  Long-term, the test-case should be re-enabled as soon as GDC support for `pragma(lib)` is available.  This issue has been created in order to ensure that this task does not get forgotten ;-)\r\n\r\nMarking as enhancement since we don't do that level of testing at the moment.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/392",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/392/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/392/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/392/events",
    "html_url": "https://github.com/dlang/tools/issues/392",
    "id": 597167116,
    "node_id": "MDU6SXNzdWU1OTcxNjcxMTY=",
    "number": 392,
    "title": "rdmd incorrectly assumes that the D compiler outputs dependency info to stdout ",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-09T09:59:44Z",
    "updated_at": "2020-04-09T09:59:44Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18423\r\n\r\nUser @WebDrake reported (2018-02-11 16:22:46 CET):\r\n> When `rdmd` invokes the D compiler to generate dependencies information, it makes a hardcoded assumption that this information gets written by the compiler to `stdout`.  However, this assumption is not valid for all D compilers.  In particular, compiler frontend messages are written out to a configurable `stdmsg`: https://github.com/dlang/dmd/commit/dc8421f\r\n> \r\n> ... and this configurability is used by GDC to output such messages to `stderr` (reflecting GCC policy that `stdout` is reserved for `-pipe` output; see: https://github.com/dlang/tools/pull/297#issuecomment-363342259).\r\n> \r\n> This means not only that `rdmd` will not work with more recent GDC releases, but that `rdmd`'s assumptions about `stdout` are not valid in general (given the configurable `stdmsg` in the DMD frontend).\r\n> \r\n> The gory details\r\n> -----------------\r\n> \r\n> The `getDependencies` function inside `rdmd.d` invokes the D compiler via the `run` command, passing in options (the `depsGetter` variable) and the name of a file to which to write the compiler output (`depsFilename`):\r\n> \r\n> ```D\r\n> immutable depsExitCode = run(depsGetter, depsFilename);\r\n> ```\r\n> \r\n> Internally, `run` takes this and uses `spawnProcess` to invoke the D compiler:\r\n> \r\n> ```D\r\n> private int run(string[] args, string output = null, bool replace = false)\r\n> {\r\n>     ...\r\n>\r\n>     File outputFile;\r\n>     if (output.ptr)\r\n>         outputFile = File(output, \"wb\");\r\n>     else\r\n>         outputFile = stdout;\r\n>     auto process = spawnProcess(args, stdin, outputFile);\r\n>     return process.wait();\r\n> }\r\n> ```\r\n> \r\n> In other words, `run` opens a file whose name is given by `depsFilename`, and uses it to replace `stdout` for the spawned process.  The contents of this file are then read using the nested `readDepsFile()` function defined internally inside `getDependencies`.\r\n> \r\n> In consequence, if the information parsed by `readDepsFile` is not written to `stdout` by the D compiler, it will not get written into `outputFile`, and therefore not be available to parse.\r\n\r\nUser @WebDrake responded (2018-02-11 16:30:16 CET):\r\n> For context, this issue was observed while trying to update rdmd's integration tests to use gdmd: https://github.com/dlang/tools/pull/307#issuecomment-363564781\r\n\r\nMarking as enhancement since things work at the moment and this is to support a new feature.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/394",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/394/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/394/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/394/events",
    "html_url": "https://github.com/dlang/tools/issues/394",
    "id": 597178609,
    "node_id": "MDU6SXNzdWU1OTcxNzg2MDk=",
    "number": 394,
    "title": "generated dmd should not be the default compiler used to build the tools",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-09T10:19:15Z",
    "updated_at": "2020-04-09T10:19:15Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=19382\r\n\r\nUser `Basile-z` reported (2018-11-09 16:00:38 CET):\r\n> for the D tools\r\n> \r\n> `make -f posix.mak` fails when the dmd available on the machine is not the one built from sources.\r\n> \r\n> we are aware that `make -f posix.mak DMD=dmd` works but people should not have to do that.\r\n> \r\n> reported because of\r\n> \r\n> https://www.reddit.com/r/d_language/comments/9vgf6j/building_dlangtools_error_127/\r\n\r\nUser `Basile-z` responded (2018-11-09 16:02:27 CET):\r\n> it's rather that by default it doesn't work when there's no generated dmd from the tools repository.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/395",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/395/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/395/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/395/events",
    "html_url": "https://github.com/dlang/tools/issues/395",
    "id": 597181336,
    "node_id": "MDU6SXNzdWU1OTcxODEzMzY=",
    "number": 395,
    "title": "Add a man page for ddemangle",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970671223,
        "node_id": "MDU6TGFiZWwxOTcwNjcxMjIz",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.POSIX",
        "name": "OS.POSIX",
        "color": "B4FA53",
        "default": false,
        "description": "Related to a POSIX-specific behavior (e.g. Linux/Mac/Solaris...)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-09T10:24:02Z",
    "updated_at": "2020-04-09T10:24:02Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18400\r\n\r\nUser @wilzbach reported (2018-02-08 21:02:54 CET):\r\n> See also: https://github.com/dlang/dmd/tree/master/docs and https://github.com/dlang/tools/blob/master/man/man1/rdmd.1",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/396",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/396/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/396/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/396/events",
    "html_url": "https://github.com/dlang/tools/issues/396",
    "id": 597184159,
    "node_id": "MDU6SXNzdWU1OTcxODQxNTk=",
    "number": 396,
    "title": "Auto-generate rdmd man page + HTML documentation",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-09T10:28:56Z",
    "updated_at": "2020-04-09T10:28:56Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18401\r\n\r\nUser @wilzbach reported (2018-02-08 21:05:07 CET):\r\n> These pages have a tendency to get outdated:\r\n> - https://github.com/dlang/tools/blob/master/man/man1/rdmd.1\r\n> - https://dlang.org/rdmd.html\r\n>\r\n> We should generate them like we do for dmd.  They are even outdated atm - search for `--shebang` on the man page.\r\n\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/397",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/397/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/397/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/397/events",
    "html_url": "https://github.com/dlang/tools/issues/397",
    "id": 597187657,
    "node_id": "MDU6SXNzdWU1OTcxODc2NTc=",
    "number": 397,
    "title": "rdmd_test do not pass on Mac OSX",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970673478,
        "node_id": "MDU6TGFiZWwxOTcwNjczNDc4",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.OSX",
        "name": "OS.OSX",
        "color": "af52de",
        "default": false,
        "description": "Related to a Mac OSX-specific behavior (excluding iOS derivatives)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-09T10:35:07Z",
    "updated_at": "2020-04-09T10:35:07Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18402\r\n\r\nReported by @timotheecour (2018-02-08 21:21:34 CET), confirmed by me.\r\nTimothee's report was:\r\n> ```console\r\n> rdmd: make -f posix.mak -j8 test => core.exception.AssertError@rdmd_test.d(373): Assertion failure\r\n> ```\r\n\r\nTested today with `-j8`.\r\n```console\r\n% make -f posix.mak test\r\nfor file in ascii iteration ; do \\\r\n\t\tgenerated/osx/64/tests_extractor -i \"./test/tests_extractor/${file}.d\" | diff -p - \"./test/tests_extractor/${file}.d.ext\"; \\\r\n\tdone\r\nparsing test/tests_extractor/ascii.d\r\nparsing test/tests_extractor/iteration.d\r\ngenerated/osx/64/tests_extractor -a betterc -i \"./test/tests_extractor/attributes.d\" | diff -p - \"./test/tests_extractor/attributes.d.ext\";\r\nparsing test/tests_extractor/attributes.d\r\ngenerated/osx/64/tests_extractor --betterC -i \"./test/tests_extractor/betterc.d\" | diff -p - \"./test/tests_extractor/betterc.d.ext\";\r\nparsing test/tests_extractor/betterc.d\r\ngenerated/osx/64/rdmd_test generated/osx/64/rdmd -m64 \\\r\n\t   --rdmd-default-compiler=../dmd/generated/osx/release/64/dmd \\\r\n\t   --test-compilers=../dmd/generated/osx/release/64/dmd \\\r\n\r\nobject.Exception@rdmd_test.d(696): /var/folders/1_/wzk0c3d17t37j8r1q8_3zl840000gn/T/dmd would not have been executed\r\n----------------\r\n??:? pure @safe void std.exception.bailOut!(Exception).bailOut(immutable(char)[], ulong, scope const(char)[]) [0x105fa83be]\r\n??:? pure @safe bool std.exception.enforce!().enforce!(bool).enforce(bool, lazy const(char)[], immutable(char)[], ulong) [0x105faa7d4]\r\n??:? void rdmd_test.runFallbackTest(immutable(char)[], immutable(char)[], immutable(char)[]) [0x105fa80fe]\r\n??:? void rdmd_test.runCompilerAgnosticTests(immutable(char)[], immutable(char)[], immutable(char)[]) [0x105fa1146]\r\n??:? _Dmain [0x105fa06fa]\r\nmake: *** [test_rdmd] Error 1\r\n```\r\n\r\n```console\r\n% dmd | head -n 1\r\nDMD64 D Compiler v2.091.0\r\n% git show HEAD\r\n[...]\r\na1da2705dcffb4955f8065aee01a08602ad8216a\r\n```\r\n\r\nTested on Mac OSX Catalina.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/398",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/398/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/398/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/398/events",
    "html_url": "https://github.com/dlang/tools/issues/398",
    "id": 597199220,
    "node_id": "MDU6SXNzdWU1OTcxOTkyMjA=",
    "number": 398,
    "title": "Tools do not support `--version` flag properly",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-09T10:56:18Z",
    "updated_at": "2020-04-09T10:56:18Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=15245\r\n\r\nUser @WebDrake reported (2015-10-25 13:19:03 CET):\r\n> None of the D tools adequately supports the version flag:\r\n> \r\n> (1) rdmd supports the --version flag but gives only the day of build (e.g. 20151025) rather than the actual version tag;\r\n> \r\n> (2) catdoc, changed, dget, dustmite and tolf all exit with an uncaught exception;\r\n> \r\n> (3) ddmangle reports an unrecognized option and prints help.\r\n> \r\n> Since the tools repository is subject to similar version tagging to dmd, druntime and phobos, it would seem appropriate that the tools support a --version flag with similar output to dmd --version.\r\n\r\nUser @CyberShadow responded (2015-10-25 23:49:22 CET):\r\n> At least DustMite is a separate project that is included with DMD for convenience, thus is not tied to the DMD release schedule. It does not have a version because it has no releases - a release is effectively a push to GitHub.\r\n\r\nUser @WebDrake responded (2015-10-25 23:59:39 CET):\r\n> > It does not have a version because it has no releases - a release is effectively a push to GitHub.\r\n>\r\n> ... and yet the repo is tagged with dmd release numbers.\r\n>\r\n> I'm not suggesting the tools _have_ to be tied to dmd release schedule, but some kind of support of --version would make sense, even if it's just to report the hash and date of the most recent commit.\r\n\r\nUser @CyberShadow responded (2015-10-26 00:01:32 CET):\r\n> > ... and yet the repo is tagged with dmd release numbers.\r\n>\r\n>\r\n> The DustMite repo isn't. The code in the D-P-L tools repo is a copy from https://github.com/CyberShadow/DustMite , updated periodically.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/393",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/393/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/393/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/393/events",
    "html_url": "https://github.com/dlang/tools/issues/393",
    "id": 597170787,
    "node_id": "MDU6SXNzdWU1OTcxNzA3ODc=",
    "number": 393,
    "title": "`dspec_test` segmentation fault",
    "user": {
      "login": "Geod24",
      "id": 2180215,
      "node_id": "MDQ6VXNlcjIxODAyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geod24",
      "html_url": "https://github.com/Geod24",
      "followers_url": "https://api.github.com/users/Geod24/followers",
      "following_url": "https://api.github.com/users/Geod24/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geod24/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geod24/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geod24/subscriptions",
      "organizations_url": "https://api.github.com/users/Geod24/orgs",
      "repos_url": "https://api.github.com/users/Geod24/repos",
      "events_url": "https://api.github.com/users/Geod24/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geod24/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970671223,
        "node_id": "MDU6TGFiZWwxOTcwNjcxMjIz",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.POSIX",
        "name": "OS.POSIX",
        "color": "B4FA53",
        "default": false,
        "description": "Related to a POSIX-specific behavior (e.g. Linux/Mac/Solaris...)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-04-09T10:05:52Z",
    "updated_at": "2020-04-10T00:39:39Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18490\r\n\r\nUser @timotheecour reported (2018-02-22 11:42:12 CET):\r\n> see https://github.com/dlang/dlang.org/pull/2169#pullrequestreview-96041881 for context\r\n> \r\n> segfault on:\r\n> ```diff\r\n> +        $(SPEC_RUNNABLE_EXAMPLE_RUN\r\n> +        ---\r\n> +        size_t fun(T...)(T t, string file = __FILE__)\r\n> +        {\r\n> +            import std.stdio;\r\n> +            writeln(file, \" \", t);\r\n> +            return T.length;\r\n> +        }\r\n> +        assert(fun(1, \"foo\") == 2);  // not 1 (IFTI)\r\n> +        assert(fun!int(1, \"foo\") == 1);  // IFTI\r\n> +        ---\r\n> ```\r\n\r\nTentatively putting it as POSIX according to the link",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/407",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/407/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/407/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/407/events",
    "html_url": "https://github.com/dlang/tools/issues/407",
    "id": 631037718,
    "node_id": "MDU6SXNzdWU2MzEwMzc3MTg=",
    "number": 407,
    "title": "changed: Link to the PR that introduced a new feature",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-04T18:02:45Z",
    "updated_at": "2020-06-04T18:02:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18122\r\n\r\nUser @wilzbach reported (2017-Dec-24 22:22:50):\r\n> Would be very interesting for people who want to know the details. In most cases the changelog every is added as part of the PR, so it should be possible to query this directly from the git log in the tools/changed.d script.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/406",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/406/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/406/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/406/events",
    "html_url": "https://github.com/dlang/tools/issues/406",
    "id": 630997034,
    "node_id": "MDU6SXNzdWU2MzA5OTcwMzQ=",
    "number": 406,
    "title": "OSX: Compiling a shared library with `rdmd` points to `name.dylib.tmp` instead of `name.dylib`",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970673478,
        "node_id": "MDU6TGFiZWwxOTcwNjczNDc4",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.OSX",
        "name": "OS.OSX",
        "color": "af52de",
        "default": false,
        "description": "Related to a Mac OSX-specific behavior (excluding iOS derivatives)"
      },
      {
        "id": 1971098420,
        "node_id": "MDU6TGFiZWwxOTcxMDk4NDIw",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.1.Regression",
        "name": "Prio.1.Regression",
        "color": "EE0701",
        "default": false,
        "description": "Used to work in a previous version, but not anymore"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-04T16:58:15Z",
    "updated_at": "2020-06-05T00:51:16Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=17216\r\n\r\nUser @timotheecour reported (2017-Feb-21 05:06:39):\r\n> v2.072.2\r\n> rdmd build 20170108\r\n>\r\n> fun.d:whatever\r\n> ```console\r\n> rdmd -v --force --build-only -shared -oflibfun.dylib fun.d\r\n> ```\r\n> creates libfun.dylib\r\n>\r\n> ```console\r\n> otool -L libfun.dylib\r\n> libfun.dylib:\r\n>         libfun.dylib.tmp (compatibility version 0.0.0, current version 0.0.0)\r\n> ```\r\n>\r\n> libfun.dylib.tmp is wrong, and will cause errors when linking via `-lfun`, eg:\r\n> `dyld: Library not loaded: libfun.dylib.tmp`\r\n>\r\n> This used to work on OSX (and works on linux)\r\n\r\nUser @timotheecour responded (2017-Feb-21 05:17:26):\r\n> same with latest:\r\n> DMD64 D Compiler v2.073.1\r\n> rdmd build 20170220\r\n\r\nUser @timotheecour responded (2017-Feb-21 05:33:14):\r\n> workaround:\r\n> `-L-install_name -Llibfun.dylib`\r\n\r\nUser @cqexbesd responded (2017-May-07 13:44:23):\r\n> This is still occurring in HEAD.\r\n>\r\n> When rdmd calls dmd it gives an output name that ends with \".tmp\" (https://github.com/dlang/tools/blob/master/rdmd.d#L483-L488) and that is what dmd passes to clang (used for linking under OSX). As the install_name arg isn't given thats what ends up being the install_name of the dylib and hence this problem.\r\n>\r\n> There are two obvious ways of fixing it - get dmd to call clang with install_name or run install_name_tool after building.\r\n>\r\n> Neither seem obviously great - IIUC rdmd doesn't know its building a shared library so doesn't know install_name is important. dmd does know but isn't aware that rdmd has passed it a dummy output name that will later get mv'ed to the final name.\r\n>\r\n> I don't yet know if rdmd _needs_ to use the .tmp then mv trick but I'm guessing its there to cope with some sort of error on some platform - if that could be avoided the problem would disappear. Anything else seems to require rdmd learning about shared libraries under OSX or dmd having more awareness of rdmd.\r\n\r\nUser @cqexbesd responded (2017-May-07 13:49:35):\r\n> OK .tmp is added at https://github.com/dlang/tools/commit/085dc5d000b828be9a3c2dc79548352f63b52db4 to work around a Windows problem so removing it without an alternative wouldn't be good.\r\n\r\nUser @cqexbesd responded (2017-May-07 14:29:52):\r\n> I now have a fix at https://github.com/cqexbesd/tools/tree/dlang_17216.\r\n>\r\n> It's not great - it just makes the windows work around only happen under Windows.\r\n>\r\n> Given https://github.com/cqexbesd/tools/blob/d27bcc1228863ba0a3b0ae5cf47a8d3a409bda45/rdmd.d#L461-L481 however I'm not sure that the windows workaround should still be needed. The rm code didn't exist when the workaround was added AFAIK. I might try removing the workaround and finding a windows user who can test it.\r\n\r\nUser @cqexbesd responded (2017-May-07 14:37:38):\r\n> Second proposed fix (removing the use of .tmp altogether) is at https://github.com/cqexbesd/tools/tree/dlang_17216_v2. I don't have a copy of Windows so it needs testing - but it works under OSX.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/409",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/409/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/409/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/409/events",
    "html_url": "https://github.com/dlang/tools/issues/409",
    "id": 631498745,
    "node_id": "MDU6SXNzdWU2MzE0OTg3NDU=",
    "number": 409,
    "title": "rdmd makes too many stat() calls, of which many are not traced",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T10:49:37Z",
    "updated_at": "2020-06-05T10:49:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=11827\r\n\r\nUser @andralex reported (2013-Dec-26 12:08:04):\r\n> https://github.com/D-Programming-Language/tools/pull/64 introduces this. Basically calls like `exists(\"filename\")` and `isDir(\"filename\")` make one stat call each, whereas calling stat once offers all information. The extra calls are not recorded with `yap()` either.\r\n>\r\n> Excessive `stat()` calls are a major scalability issue.\r\n>\r\n> Arguably the best fix would be to offer a nice API as noted in the pull request.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/410",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/410/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/410/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/410/events",
    "html_url": "https://github.com/dlang/tools/issues/410",
    "id": 631505027,
    "node_id": "MDU6SXNzdWU2MzE1MDUwMjc=",
    "number": 410,
    "title": "rdmd file-descriptor issues with snap packages",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970686477,
        "node_id": "MDU6TGFiZWwxOTcwNjg2NDc3",
        "url": "https://api.github.com/repos/dlang/tools/labels/Arch.x86_64",
        "name": "Arch.x86_64",
        "color": "FF8500",
        "default": false,
        "description": "64-bits only behavior (also known as amd64)"
      },
      {
        "id": 1970671223,
        "node_id": "MDU6TGFiZWwxOTcwNjcxMjIz",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.POSIX",
        "name": "OS.POSIX",
        "color": "B4FA53",
        "default": false,
        "description": "Related to a POSIX-specific behavior (e.g. Linux/Mac/Solaris...)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T11:00:51Z",
    "updated_at": "2020-06-05T11:00:51Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=17838\r\n\r\nUser @WebDrake reported (2017-Sep-18 20:02:36):\r\n> rdmd uses spawnProcess to launch the D compiler of choice, and passes a custom `File` instance to the `stdout` parameter.\r\n>\r\n> This means that the D compiler has to inherit a file-descriptor from rdmd.  For traditional Linux packages, this is not a problem.  However, where snap packages are concerned, this creates an issue: when the D compiler is itself a snap package, its confinement rules prevent it from inheriting the file descriptor, and rdmd will exit with an error message:\r\n>\r\n> ```console\r\n> $ rdmd --compiler=ldc2 hello.d\r\n> Failed to flush stdout: Permission denied\r\n> Failed: [\"ldc2\", \"-v\", \"-o-\", \"hello.d\", \"-I.\"]\r\n> ```\r\n>\r\n> Some extended discussion of this issue can be found in this thread on the snapcraft forums:\r\n> https://forum.snapcraft.io/t/failed-to-flush-stdout-permission-denied/485\r\n>\r\n> This is considered at least partly a bug in snapd, hence I've held off on reporting it as an rdmd issue, but it looks like this is going to be long-lived enough for me to think it might be worth addressing in rdmd itself if possible.\r\n>\r\n> A recent patch to rdmd (https://github.com/dlang/tools/commit/f7e6f4ed925f6a8f97b4c0f02cfce2620489357a) partially addresses this issue, as it ensures that when rdmd is invoking a D compiler within the same snap package as itself, the confinement rules do not come into play (because the compiler executable is launched directly, instead of indirectly via the wrapper script that the snap package exposes to the host system).\r\n>\r\n> However, this still leaves unaddressed the broader issue of rdmd invoking a compiler provided by a separate snap package (e.g. the ldc2 snap package).\r\n>\r\n> So: can rdmd be either patched or invoked in order to avoid the D compiler it invokes needing to inherit a file descriptor from it? :-)\r\n\r\nUser @wilzbach responded (2018-Mar-24 07:32:32):\r\n> > So: can rdmd be either patched or invoked in order to avoid the D compiler it invokes needing to inherit a file descriptor from it? :-)\r\n>\r\n> Yes it can (in theory). With the improvements in 2.079, DMD now supports JSON output via stdout (see e.g. https://run.dlang.io/is/DiSyCl).\r\n> That's what https://github.com/dlang/tools/pull/292 was supposed to do.\r\n> With the JSON output, no temporary .deps file would be needed and the stdout could be parsed directly, but I think 292 would just instruct dmd to save the JSON output to the temp folder, s.t. no further complications are needed.\r\n>\r\n> > So: can rdmd be either patched\r\n>\r\n> Sure, have you tried patching spawnProcess out with\r\n> a) execute and saving the output manually\r\n> b) a custom implementation that uses real files instead of file pointers?\r\n\r\nUser @WebDrake responded (2018-Mar-24 13:25:53):\r\n> > With the improvements in 2.079, DMD now supports JSON output via stdout\r\n>\r\n> That's hardly a viable solution.  The problem only arises when one attempts to specify a different D compiler with the --compiler flag, and that compiler is itself snap-packaged.\r\n>\r\n> That would usually mean one is trying to use a different compiler than dmd -- i.e. ldmd2 or gdmd -- neither of which uses the 2.079 frontend yet.  And even allowing for that, it's desirable to find a solution that does NOT work only for future compiler releases.\r\n>\r\n> We have to get away from this notion that a release of rdmd only has to work with the dmd it's bundled with, and that it can ignore the question of working properly with other D compilers on the same system, or D compilers using an older frontend version.\r\n>\r\n> This is ultimately an upstream bug that causes problems with the --compiler flag in a narrow context.  We shouldn't work around it by causing problems with the --compiler flag in almost EVERY context.\r\n>\r\n> > Sure, have you tried patching spawnProcess out with\r\n> > a) execute and saving the output manually\r\n>\r\n> Yes, but with limited success, probably because I didn't find a way that worked with `spawnProcess`.  Probably the way forward here is to use `spawnShell` instead, and to request that stdout be piped to a specified file name.  That might also address other issues that people have had (e.g. one person mentioned problems on Windows using a dmd.bat script that wrapped the true dmd compiler).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/412",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/412/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/412/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/412/events",
    "html_url": "https://github.com/dlang/tools/issues/412",
    "id": 631551210,
    "node_id": "MDU6SXNzdWU2MzE1NTEyMTA=",
    "number": 412,
    "title": "rdmd should limit its tmp cache",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T12:24:50Z",
    "updated_at": "2020-06-05T12:24:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=11405\r\n\r\nUser @MartinNowak reported (2013-Oct-31 16:28:42):\r\n> Old discussion but still a valid issue.\r\n> http://forum.dlang.org/thread/gomtj5$1iut$1@digitalmars.com\r\n> Rdmd needs a reasonable policy to evict old cached folders.\r\n> A simple solution would be to delete an existing folder with the same\r\n> first 2-3 bytes of the digest. This means we'd have to lock the folders\r\n> to synchronize different rdmd processes.\r\n\r\nUser @AndrejMitrovic responded (2014-Apr-26 19:31:14):\r\n> (In reply to Martin Nowak from comment #0)\r\n> > A simple solution would be to delete an existing folder with the same\r\n> > first 2-3 bytes of the digest. This means we'd have to lock the folders\r\n> > to synchronize different rdmd processes.\r\n>\r\n> I'd hate to make RDMD more complicated, but one idea is to make RDMD read its own config file just like DMD reads its .conf file, and then make this stuff configurable.\r\n\r\nUser @bearophile responded (2014-Apr-26 19:43:05):\r\n> Renamed issue it's => its, hopefully for the better.\r\n\r\nUser @CyberShadow responded (2017-Jul-08 01:53:45):\r\n> With /tmp being a tmpfs on many distros today, and Windows' disk cleanup utility knowing about and deleting the %TEMP% directory on request or when the disk gets full, this may not be as much of an issue nowadays, though still may be worth fixing.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/413",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/413/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/413/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/413/events",
    "html_url": "https://github.com/dlang/tools/issues/413",
    "id": 631554274,
    "node_id": "MDU6SXNzdWU2MzE1NTQyNzQ=",
    "number": 413,
    "title": "rdmd runs dmd twice for single-files with no dependencies",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T12:30:24Z",
    "updated_at": "2020-06-05T12:30:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=16431\r\n\r\nUser @wilzbach reported (2016-Aug-25 20:50:41):\r\n> ```console\r\n> $ python -m timeit -v -n 10 -s 'import os' 'os.system(\"dub run --single --force foo.d\")'\r\n> 10 loops, best of 3: 578 msec per loop\r\n> ```\r\n>\r\n> ```console\r\n> $ python -m timeit -v -n 10 -s 'import os' 'os.system(\"rdmd --force foo.d\")'\r\n> 10 loops, best of 3: 730 msec per loop\r\n> ```\r\n>\r\n> I used an example from the DLang Tour (see below or http://tour.dlang.io/tour/en/gems/template-meta-programming) and tested with more and the overhead seems to stay there:\r\n>\r\n> == Associative arrays ==\r\n>\r\n> http://tour.dlang.io/tour/en/basics/associative-arrays\r\n>\r\n> ```console\r\n> rdmd 5 loops, best of 3: 637 msec per loop\r\n> dub: 5 loops, best of 3: 584 msec per loop\r\n> ```\r\n>\r\n> == Loops ==\r\n>\r\n> http://tour.dlang.io/tour/en/basics/loops\r\n>\r\n> ```console\r\n> rdmd: 5 loops, best of 3: 488 msec per loop\r\n> dub: 5 loops, best of 3: 373 msec per loop\r\n> ```\r\n>\r\n> ```D\r\n> #!/usr/bin/env rdmd\r\n> /+ dub.sdl:\r\n> name \"foo\"\r\n> +/\r\n>\r\n> import std.traits: isFloatingPoint;\r\n> import std.uni: toUpper;\r\n> import std.string: format;\r\n> import std.stdio: writeln;\r\n>\r\n> /// A Vector that just works for\r\n> /// numbers, integers or floating points.\r\n> struct Vector3(T)\r\n>   if (is(T: real))\r\n> {\r\n> private:\r\n>     T x,y,z;\r\n>\r\n>     /// Generator for getter and setter because\r\n>     /// we really hate boiler plate!\r\n>     ///\r\n>     /// var -> T getVAR() and void setVAR(T)\r\n>     mixin template GetterSetter(string var) {\r\n>         // Use mixin to construct function\r\n>         // names\r\n>         mixin(\"T get%s() const { return %s; }\"\r\n>           .format(var.toUpper, var));\r\n>\r\n>         mixin(\"void set%s(T v) { %s = v; }\"\r\n>           .format(var.toUpper, var));\r\n>     }\r\n>\r\n>     // Easily generate our getX, setX etc.\r\n>     // functions with a mixin template.\r\n>     mixin GetterSetter!\"x\";\r\n>     mixin GetterSetter!\"y\";\r\n>     mixin GetterSetter!\"z\";\r\n>\r\n> public:\r\n>     // We don't allow the dot function\r\n>     // for anything but floating points\r\n>     static if (isFloatingPoint!T) {\r\n>         T dot(Vector3!T rhs) {\r\n>             return x*rhs.x + y*rhs.y +\r\n>                 z*rhs.z;\r\n>         }\r\n>     }\r\n> }\r\n>\r\n> void main()\r\n> {\r\n>     auto vec = Vector3!double(3,3,3);\r\n>     // That doesn't work because of the template\r\n>     // constraint!\r\n>     // Vector3!string illegal;\r\n>\r\n>     auto vec2 = Vector3!double(4,4,4);\r\n>     writeln(\"vec dot vec2 = \", vec.dot(vec2));\r\n>\r\n>     auto vecInt = Vector3!int(1,2,3);\r\n>     // doesn't have the function dot because\r\n>     // we statically enabled it only for float's\r\n>     // vecInt.dot(Vector3!int(0,0,0));\r\n>\r\n>     // generated getter and setters!\r\n>     vecInt.setX(3);\r\n>     vecInt.setZ(1);\r\n>     writeln(vecInt.getX, \",\",\r\n>       vecInt.getY, \",\", vecInt.getZ);\r\n> }\r\n> ```\r\n\r\nUser @ag0aep6g responded (2016-Aug-25 21:26:33):\r\n> I don't think this is much of a surprise. rdmd detects dependencies. dub doesn't seem to do that.\r\n\r\nUser @wilzbach responded (2016-Aug-26 02:00:56):\r\n> > I don't think this is much of a surprise. rdmd detects dependencies. dub doesn't seem to do that.\r\n>\r\n> Well, it still seems unnecessary to me to run the full-blown CTFE compiler twice on a file. I gave it a quick try with two hacks:\r\n>\r\n> https://github.com/dlang/tools/pull/191\r\n\r\nUser @ag0aep6g responded (2016-Aug-26 13:08:02):\r\n> (In reply to greensunny12 from comment 2)\r\n> > Well, it still seems unnecessary to me to run the full-blown CTFE compiler\r\n> > twice on a file.\r\n>\r\n> Sure. If you make rdmd faster, that's great. I just don't think that dub has anything to do with it.\r\n\r\nUser @AndrejMitrovic responded (2016-Aug-31 21:30:26):\r\n> Fixed right? Closing.\r\n\r\nUser @wilzbach responded (2017-Jul-20 20:07:38):\r\n> PR was reverted :/\r\n\r\nUser @marler8997 responded (2017-Dec-14 16:37:33):\r\n> Potential fix: https://github.com/dlang/tools/pull/271\r\n> \"Use \"-i\" to prevent rdmd from having to invoke compiler twice.\"\r\n>\r\n> Depends on this first: https://github.com/dlang/dmd/pull/7099\r\n> \"Enable automatic compiling of imports\"\r\n\r\nUser @marler8997 responded (2018-Jan-17 02:39:18):\r\n> https://github.com/dlang/tools/pull/271\r\n\r\nUser @marler8997 responded (2018-Jan-20 02:21:14):\r\n> https://github.com/dlang/tools/pull/271 was reverted",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/411",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/411/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/411/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/411/events",
    "html_url": "https://github.com/dlang/tools/issues/411",
    "id": 631507924,
    "node_id": "MDU6SXNzdWU2MzE1MDc5MjQ=",
    "number": 411,
    "title": "Rename dman in the Debian .deb package to prevent conflict with Debian package debian-goodies",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970670171,
        "node_id": "MDU6TGFiZWwxOTcwNjcwMTcx",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.Linux",
        "name": "OS.Linux",
        "color": "F5BD0B",
        "default": false,
        "description": "Related to a Linux-specific behavior (regardless of distribution)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-05T11:06:02Z",
    "updated_at": "2020-06-07T19:57:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=17569\r\n\r\nUser @quickfur reported (2017-Jun-28 17:49:19):\r\n> This was reported on the forum:\r\n>\r\n> > Installing dmd if debian-goodies is installed fails. Both try to write a file\r\n> > named '/usr/bin/dman'\r\n> >\r\n> > [...snip...]\r\n> >\r\n> > ```console\r\n> > $ sudo dpkg -i dmd_2.074.1-0_amd64.1.deb\r\n> > (Reading database ... 224610 files and directories currently installed.)\r\n> > Preparing to unpack dmd_2.074.1-0_amd64.1.deb ...\r\n> > Unpacking dmd (2.074.1-0) ...\r\n> > dpkg: error processing archive dmd_2.074.1-0_amd64.1.deb (--install):\r\n> >  trying to overwrite '/usr/bin/dman', which is also in package debian-goodies 0.74\r\n> > dpkg-deb: error: subprocess paste was killed by signal (Broken pipe)\r\n> >\r\n> > $ sudo dpkg -i dmd_2.075.0~b1-0_amd64.deb\r\n> > (Reading database ... 224610 files and directories currently installed.)\r\n> > Preparing to unpack dmd_2.075.0~b1-0_amd64.deb ...\r\n> > Unpacking dmd (2.075.0~b1-0) ...\r\n> > dpkg: error processing archive dmd_2.075.0~b1-0_amd64.deb (--install):\r\n> >  trying to overwrite '/usr/bin/dman', which is also in package debian-goodies 0.74\r\n> > dpkg-deb: error: subprocess paste was killed by signal (Broken pipe)\r\n> > ```\r\n>\r\n> The package debian-goodies also ships a binary named `dman`, with this description:\r\n>\r\n> ```\r\n>   dman               - Fetch manpages from online manpages.debian.org service\r\n> ```\r\n>\r\n> Since this is something shipped with Debian itself, I recommend either (1) renaming our dman utility to something less ambiguous, or (2) excluding it from the .deb package for dmd altogether.\r\n>\r\n> And on that note, just in case, I highly recommend *against* putting a Conflicts: line in the debian/control file, because there is no good reason why the debian-goodies package should be excluded by the dmd package. If anything, we should be the ones to give up the dman utility (I have never found a need for it, and I question whether anyone actually uses it besides the D developers).\r\n>\r\n> I'm marking this as a major bug, because the conflict means that any Debian user who wants to try out D for the first time may get immediately turned away by the installation failure due to some silly marginal utility being unfortunately named, just because he happens to have the debian-goodies package installed.\r\n\r\nUser @MartinNowak responded (2017-Aug-08 20:37:47):\r\n> Another reported conflict is deepin-manual http://forum.dlang.org/post/zwusavzzulksmekovwos@forum.dlang.org.\r\n\r\nUser @WalterBright responded (2017-Aug-10 20:19:48):\r\n> Just rename it to dmanual",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/415",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/415/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/415/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/415/events",
    "html_url": "https://github.com/dlang/tools/issues/415",
    "id": 633946403,
    "node_id": "MDU6SXNzdWU2MzM5NDY0MDM=",
    "number": 415,
    "title": "`rdmd -deps=foo.deps foo.d` caching misses dependency on foo.deps",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-08T01:11:03Z",
    "updated_at": "2020-06-08T01:11:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=17071\r\n\r\nUser @timotheecour reported (2017-Jan-08 02:57:48):\r\n> ```console\r\n> $ rdmd -deps=foo.deps -c foo.d\r\n> #creates foo.deps foo.o\r\n> $ rm foo.deps\r\n>\r\n> $ rdmd -deps=foo.deps -c foo.d\r\n> # BUG: foo.deps not recreated\r\n>\r\n> $ rdmd --force -deps=foo.deps -c foo.d\r\n> #ok\r\n> ```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/423",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/423/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/423/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/423/events",
    "html_url": "https://github.com/dlang/tools/issues/423",
    "id": 782585234,
    "node_id": "MDU6SXNzdWU3ODI1ODUyMzQ=",
    "number": 423,
    "title": "rdmd does not discover all dependencies",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T11:11:00Z",
    "updated_at": "2021-01-09T11:11:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18079\r\n\r\nUser @marler8997 reported (2017-Dec-14 16:25:16):\r\n> Related to (https://issues.dlang.org/show_bug.cgi?id=8858).  That bug was created because dmd would not discover all the imported modules when compiling a single file.  However, this was closed as a \"non issue\" because the compiler is not \"supposed\" to discover all dependencies when compiling a single module.  If an application wants to discover all imported modules, then they can use the \"-deps\" flag to force the compiler to do so.\r\n>\r\n> rdmd currently uses this \"import discovery\" to obtain a list of all the modules it needs to compile.  However, rdmd does not use the \"-deps\" flag when discovering dependencies which means that in some cases it will be missing modules to compile, i.e.\r\n>\r\n> main.d\r\n> ```D\r\n> import foo;\r\n> void main() { printx(); }\r\n> ```\r\n> foo.d\r\n> ```D\r\n> module foo;\r\n> void printx() { import std.stdio; import bar : x; writefln(\"x is %s\", x); }\r\n> ```\r\n> bar.d\r\n> ```D\r\n> module bar;\r\n> int x = 42;\r\n> ```\r\n>\r\n> > rdmd main.d\r\n>\r\n> this could be fixed by modifying rdmd to use the \"-deps\" flag, however, this has a significant performance cost.  Another solution proposed is to integrate the \"compile imports\" feature (https://github.com/dlang/dmd/pull/7099) and modify rdmd to use that feature instead (https://github.com/dlang/tools/pull/271).\r\n\r\nUser @marler8997 responded (2018-Jan-10 03:06:04):\r\n> This bug should be fixed with this PR.\r\n>\r\n> https://github.com/dlang/tools/pull/271\r\n\r\nUser @marler8997 responded (2018-Jan-16 17:39:51):\r\n> https://github.com/dlang/tools/pull/271\r\n\r\nUser @marler8997 responded (2018-Jan-20 02:04:42):\r\n> https://github.com/dlang/tools/pull/271 was reverted",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/421",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/421/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/421/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/421/events",
    "html_url": "https://github.com/dlang/tools/issues/421",
    "id": 782584556,
    "node_id": "MDU6SXNzdWU3ODI1ODQ1NTY=",
    "number": 421,
    "title": "rdmd --exclude= --include= should allow passing in modules (not just packages)",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T11:06:41Z",
    "updated_at": "2021-01-09T11:11:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18040\r\n\r\nUser @timotheecour reported (2017-Dec-07 06:07:41):\r\n> I don't see any reason why --exclude= --include= should be only allowing packages, it should also allow modules, eg:\r\n> `rdmd --exclude=bar main.d`\r\n> => will exclude package bar or module bar whichever is defined\r\n>\r\n> Eg, there's no way currently to exclude a single module. This will allow this as well as other use cases.\r\n\r\nUser @marler8997 responded (2018-Jan-10 03:07:35):\r\n> I think this will be fixed with: https://github.com/dlang/tools/pull/271\r\n\r\nUser @marler8997 responded (2018-Jan-16 17:39:40):\r\n> https://github.com/dlang/tools/pull/271\r\n\r\nUser @marler8997 responded (2018-Jan-20 02:22:53):\r\n> https://github.com/dlang/tools/pull/271 was reverted",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/422",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/422/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/422/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/422/events",
    "html_url": "https://github.com/dlang/tools/issues/422",
    "id": 782584964,
    "node_id": "MDU6SXNzdWU3ODI1ODQ5NjQ=",
    "number": 422,
    "title": "rdmd ignores --exclude when -deps is provided",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T11:09:24Z",
    "updated_at": "2021-01-09T11:11:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18042\r\n\r\nUser @timotheecour reported (2017-Dec-07 07:20:59):\r\n> adding -deps inside rdmd command below will print all dependencies inside bar.foo.fun; it shouldn't because we passed --exclude=bar\r\n>\r\n> ./setup.sh:\r\n> ```sh\r\n> build_lib(){\r\n>         dmd -of=libfoo.a -lib bar/foo.d\r\n> }\r\n>\r\n> build_main(){\r\n>         exe=./main\r\n>\r\n>         rdmd --force -v --build-only -of$exe -L-lfoo -L-L. --exclude=bar main.d\r\n>         $exe\r\n> }\r\n> ```\r\n>\r\n> ./main.d:\r\n> ```D\r\n> import bar.foo;\r\n> void main(){ fun(); }\r\n> ```\r\n>\r\n> ./bar/foo.d:\r\n> ```D\r\n> module bar.foo;\r\n>\r\n> void fun(){\r\n>         import std.stdio;\r\n>         writeln(\"ok1\");\r\n> }\r\n> ```\r\n\r\nUser @marler8997 responded (2018-Jan-10 03:07:11):\r\n> Just wanted to make a note that we should retest this bug once this PR is integrated.\r\n>\r\n> https://github.com/dlang/tools/pull/271\r\n\r\nUser @marler8997 responded (2018-Jan-16 17:37:57):\r\n> Fixed with: https://github.com/dlang/tools/pull/271\r\n\r\nUser @marler8997 responded (2018-Jan-20 02:23:24):\r\n> https://github.com/dlang/tools/pull/271 was reverted",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/424",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/424/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/424/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/424/events",
    "html_url": "https://github.com/dlang/tools/issues/424",
    "id": 782586102,
    "node_id": "MDU6SXNzdWU3ODI1ODYxMDI=",
    "number": 424,
    "title": "rdmd doesn't respect DFLAGS for its cache hash",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T11:16:30Z",
    "updated_at": "2021-01-09T11:16:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=18433\r\n\r\nUser @marler8997 reported (2018-Feb-13 16:41:59):\r\n> rdmd currently ignores DFLAGS.  These flags should be treated like all the other compiler flags.\r\n\r\nUser @wilzbach responded (2018-Mar-27 22:48:04):\r\n> Hmm I think the problem is more in DMD not respecting everything from DFLAGS:\r\n> However, this has been in master:\r\n> ```sh\r\n> $ cat > foo.d << EOF\r\n> void main(){\r\n>     import std.stdio;\r\n>     version(Foo)\r\n>     {\r\n>         \"foo\".writeln;\r\n>     }\r\n>     else\r\n>     {\r\n>         \"bar\".writeln;\r\n>     }\r\n> }\r\n> EOF\r\n> ```\r\n>\r\n> ```sh\r\n> $ dmd -version=Foo foo.d && ./foo\r\n> foo\r\n> $ DFLAGS=\"-version=Foo\" dmd foo.d && ./foo\r\n> bar\r\n> $ DFLAGS=\"-version=Foo\" rdmd --force foo.d\r\n> bar\r\n> ```\r\n>\r\n> (with ~master this correctly yields foo for all commands)\r\n>\r\n> But it looks like rdmd's caching doesn't include a hash of DFLAGS.\r\n>\r\n> ```sh\r\n> $ DFLAGS=\"-version=Foo\" rdmddev foo.d\r\n> foo\r\n> $ DFLAGS=\"-version=Bar\" rdmddev foo.d\r\n> foo\r\n> ```\r\n>\r\n> (so I'm renaming this)\r\n\r\nUser @wilzbach responded (2018-Mar-27 23:16:22):\r\n> Argh, apparently this hasn't been fixed in master and DFLAGS is only looked at when -conf= is set:\r\n>\r\n> ```sh\r\n> $ DFLAGS=\"-version=Foo\" ../dmd/generated/linux/release/64/dmd -v foo.d && ./foo\r\n> predefs   DigitalMars Posix linux ELFv1 LittleEndian D_Version2 all D_SIMD D_InlineAsm_X86_64 X86_64 CRuntime_Glibc D_LP64 D_PIC assert D_HardFloat\r\n> binary    ../dmd/generated/linux/release/64/dmd\r\n> version   v2.079.0-284-g23b2e2e0d\r\n> config    ../dmd/generated/linux/release/64/dmd.conf\r\n> DFLAGS    -I../dmd/generated/linux/release/64/../../../../../druntime/import -I../dmd/generated/linux/release/64/../../../../../phobos -L-L../dmd/generated/linux/release/64/../../../../../phobos/generated/linux/release/64 -L--export-dynamic -fPIC\r\n> ```\r\n>\r\n>\r\n> ```shell\r\n> $ DFLAGS=\"-version=Foo\" dmd -conf= -I~/dlang/phobos -I~/dlang/druntime/import -c -v foo.d\r\n> predefs   Foo DigitalMars Posix linux ELFv1 LittleEndian D_Version2 all D_SIMD D_InlineAsm_X86_64 X86_64 CRuntime_Glibc D_LP64 D_PIC assert D_HardFloat\r\n> binary    /home/seb/dlang/dmd/generated/linux/release/64/dmd\r\n> version   v2.079.0-284-g23b2e2e0d\r\n> config\r\n> DFLAGS    -version=Foo\r\n> ```\r\n\r\nUser @wilzbach responded (2018-Mar-27 23:31:42):\r\n> https://github.com/dlang/tools/pull/343",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/343",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/343/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/343/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/343/events",
    "html_url": "https://github.com/dlang/tools/pull/343",
    "id": 309168145,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3ODkxNzAz",
    "number": 343,
    "title": "Fix Issue 18433 - rdmd doesn't respect DFLAGS for its cache hash",
    "user": {
      "login": "wilzbach",
      "id": 4370550,
      "node_id": "MDQ6VXNlcjQzNzA1NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4370550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilzbach",
      "html_url": "https://github.com/wilzbach",
      "followers_url": "https://api.github.com/users/wilzbach/followers",
      "following_url": "https://api.github.com/users/wilzbach/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilzbach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilzbach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilzbach/subscriptions",
      "organizations_url": "https://api.github.com/users/wilzbach/orgs",
      "repos_url": "https://api.github.com/users/wilzbach/repos",
      "events_url": "https://api.github.com/users/wilzbach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilzbach/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2112192702,
        "node_id": "MDU6TGFiZWwyMTEyMTkyNzAy",
        "url": "https://api.github.com/repos/dlang/tools/labels/Enhancement",
        "name": "Enhancement",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 548182088,
        "node_id": "MDU6TGFiZWw1NDgxODIwODg=",
        "url": "https://api.github.com/repos/dlang/tools/labels/PR.Blocked",
        "name": "PR.Blocked",
        "color": "000000",
        "default": false,
        "description": "A PR blocker by another issue / PR, external to the PR (as opposed to WIP)"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2018-03-27T23:23:54Z",
    "updated_at": "2021-01-09T11:17:26Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/dlang/tools/pulls/343",
      "html_url": "https://github.com/dlang/tools/pull/343",
      "diff_url": "https://github.com/dlang/tools/pull/343.diff",
      "patch_url": "https://github.com/dlang/tools/pull/343.patch"
    },
    "body": "Note this is only part of the required fix.\r\nDMD at the moment doesn't allow to incrementally add to DFLAGS, so this needs to be fixed before this can be merged:\r\n\r\n\r\n```\r\n> DFLAGS=\"-version=Foo\" ../dmd/generated/linux/release/64/dmd -c -v foo.d\r\n\r\npredefs   DigitalMars Posix linux ELFv1 LittleEndian D_Version2 all D_SIMD D_InlineAsm_X86_64 X86_64 CRuntime_Glibc D_LP64 D_PIC assert D_HardFloat\r\nbinary    ../dmd/generated/linux/release/64/dmd\r\nversion   v2.079.0-284-g23b2e2e0d\r\nconfig    ../dmd/generated/linux/release/64/dmd.conf\r\nDFLAGS    -I../dmd/generated/linux/release/64/../../../../../druntime/import -I../dmd/generated/linux/release/64/../../../../../phobos -L-L../dmd/generated/linux/release/64/../../../../../phobos/generated/linux/release/64 -L--export-dynamic -fPIC\r\n```\r\n\r\n(no `Foo` set here)\r\n\r\n\r\n```\r\n> DFLAGS=\"-version=Foo\" dmd -conf= -I~/dlang/phobos -I~/dlang/druntime/import -c -v foo.d\r\n\r\npredefs   Foo DigitalMars Posix linux ELFv1 LittleEndian D_Version2 all D_SIMD D_InlineAsm_X86_64 X86_64 CRuntime_Glibc D_LP64 D_PIC assert D_HardFloat\r\nbinary    /home/seb/dlang/dmd/generated/linux/release/64/dmd\r\nversion   v2.079.0-284-g23b2e2e0d\r\nconfig    \r\nDFLAGS    -version=Foo\r\n```\r\n\r\nFixes #424 ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/420",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/420/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/420/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/420/events",
    "html_url": "https://github.com/dlang/tools/issues/420",
    "id": 782583873,
    "node_id": "MDU6SXNzdWU3ODI1ODM4NzM=",
    "number": 420,
    "title": "dumpobj, obj2asm, shell should be built for 64 bit",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970686477,
        "node_id": "MDU6TGFiZWwxOTcwNjg2NDc3",
        "url": "https://api.github.com/repos/dlang/tools/labels/Arch.x86_64",
        "name": "Arch.x86_64",
        "color": "FF8500",
        "default": false,
        "description": "64-bits only behavior (also known as amd64)"
      },
      {
        "id": 1971100259,
        "node_id": "MDU6TGFiZWwxOTcxMTAwMjU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.2.Blocker",
        "name": "Prio.2.Blocker",
        "color": "DD7701",
        "default": false,
        "description": "A major issue that is a major roadblock for other issues or projects"
      },
      {
        "id": 2644954811,
        "node_id": "MDU6TGFiZWwyNjQ0OTU0ODEx",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.DigitalMars",
        "name": "T.DigitalMars",
        "color": "3ac448",
        "default": false,
        "description": "Issues that affect tools for which the code is not in this repository (DigitalMars tools)"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T11:02:12Z",
    "updated_at": "2021-01-09T18:55:11Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=19664\r\n\r\nUser @jacob-carlborg reported (2019-Feb-10 10:13:10):\r\n> All tools shipped with a DMD release should be built for the same architecture. For a 64 bit release, the following tools are built for 32 bit: \"dumpobj\", \"obj2asm\" and \"shell\". This is extra important for macOS since Mojave is the last release where 32 bit applications will work and with DMD 2.085.0 we have deprecated the support for 32 bit on macOS.\r\n\r\nUser @jacob-carlborg responded (2019-Jul-14 15:58:38):\r\n> Raising this to blocker since the public beta of macOS Catalina is out where 32 bit programs don't run.\r\n\r\nCC @WalterBright : Those tools are distributed as by DigitalMars and not actually part of this repository, so you're the only one able to handle this AFAIK.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/425",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/425/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/425/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/425/events",
    "html_url": "https://github.com/dlang/tools/issues/425",
    "id": 782667575,
    "node_id": "MDU6SXNzdWU3ODI2Njc1NzU=",
    "number": 425,
    "title": "coffimplib silently overwrites a library with a mixed-case extension",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970684471,
        "node_id": "MDU6TGFiZWwxOTcwNjg0NDcx",
        "url": "https://api.github.com/repos/dlang/tools/labels/Arch.x86",
        "name": "Arch.x86",
        "color": "0071c5",
        "default": false,
        "description": "32-bits only behavior (i386 or higher)"
      },
      {
        "id": 1970672001,
        "node_id": "MDU6TGFiZWwxOTcwNjcyMDAx",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.Windows",
        "name": "OS.Windows",
        "color": "00adef",
        "default": false,
        "description": "Related to a Windows-specific behavior (regardless of version)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 2644954811,
        "node_id": "MDU6TGFiZWwyNjQ0OTU0ODEx",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.DigitalMars",
        "name": "T.DigitalMars",
        "color": "3ac448",
        "default": false,
        "description": "Issues that affect tools for which the code is not in this repository (DigitalMars tools)"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T19:08:49Z",
    "updated_at": "2021-01-09T19:08:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=2620\r\n\r\nUser `snake.scaly` reported (2009-Jan-26 18:00:00):\r\n> coffimplib, when run with only one library as an argument, usually complains about not being able to overwrite the library.  Nevertheless it will silently overwrite the library if its extension isn't all-lowercase.  This happens quite often to me because most of libraries in Microsoft Platform SDK are capitalized this way.\r\n>\r\n> ```shell\r\n> $ coffimplib bufferoverflowu.lib\r\n> output file 'bufferoverflowu.lib' would overwrite input file, use -f to force it\r\n> $ coffimplib Certadm.lib\r\n> output file 'Certadm.lib' would overwrite input file, use -f to force it\r\n> $ coffimplib ComDlg32.Lib\r\n> (nothing)\r\n> ```\r\n\r\nCC @WalterBright : You're the only one that can handle such bugs as they are on DigitalMars tools.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/426",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/426/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/426/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/426/events",
    "html_url": "https://github.com/dlang/tools/issues/426",
    "id": 782667809,
    "node_id": "MDU6SXNzdWU3ODI2Njc4MDk=",
    "number": 426,
    "title": "obj2asm thinks / starts a switch on non-Windows systems",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970671223,
        "node_id": "MDU6TGFiZWwxOTcwNjcxMjIz",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.POSIX",
        "name": "OS.POSIX",
        "color": "B4FA53",
        "default": false,
        "description": "Related to a POSIX-specific behavior (e.g. Linux/Mac/Solaris...)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 2644954811,
        "node_id": "MDU6TGFiZWwyNjQ0OTU0ODEx",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.DigitalMars",
        "name": "T.DigitalMars",
        "color": "3ac448",
        "default": false,
        "description": "Issues that affect tools for which the code is not in this repository (DigitalMars tools)"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T19:10:35Z",
    "updated_at": "2021-01-09T19:10:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=7677\r\n\r\nUser @WalterBright reported (2012-Mar-09 11:41:05):\r\n> ```shell\r\n> $ obj2asm /bin/ls\r\n> Fatal error: unrecognized flag '/bin/ls'\r\n> ```\r\n> Reported:\r\n>\r\n> http://www.reddit.com/r/programming/comments/qlssq/one_small_step_toward_reducing_programming/c3z7h7v",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/427",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/427/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/427/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/427/events",
    "html_url": "https://github.com/dlang/tools/issues/427",
    "id": 782669151,
    "node_id": "MDU6SXNzdWU3ODI2NjkxNTE=",
    "number": 427,
    "title": "`rdmd -g --build-only` implicitly looses debug info",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1970673478,
        "node_id": "MDU6TGFiZWwxOTcwNjczNDc4",
        "url": "https://api.github.com/repos/dlang/tools/labels/OS.OSX",
        "name": "OS.OSX",
        "color": "af52de",
        "default": false,
        "description": "Related to a Mac OSX-specific behavior (excluding iOS derivatives)"
      },
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T19:18:50Z",
    "updated_at": "2021-01-09T19:18:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=8173\r\n\r\nUser @thelastmammoth reported (2012-May-31 02:23:50):\r\n> Currently, running:\r\n> ```shell\r\n> $ rdmd -g --build-only main &&  gdb main\r\n> ```\r\n> yields:\r\n> ```\r\n> warning: Could not find object file \"/tmp/.rdmd-503/rdmd-main.d-.../main.o\" - no debug information available for \"main.d\".\r\n> ```\r\n> (but using the manual way with dmd works... with the names mangled but that's a different issue )\r\n>\r\n> perhaps it would be possible to preserve debug info when -g (or -debug, etc) is present as opposed to having -o- (which appears when --chatty is on) ?\r\n\r\nUser @CyberShadow responded (2013-Mar-10 01:17:44):\r\n> (In reply to comment #0)\r\n> > Currently, running\r\n> > rdmd -g --build-only main &&  gdb main\r\n> >\r\n> > yields:\r\n> > warning: Could not find object file \"/tmp/.rdmd-503/rdmd-main.d-.../main.o\" -\r\n> > no debug information available for \"main.d\".\r\n>\r\n> What OS is this on? You specified \"All\" but it does not apply to Windows and does not happen on Linux.\r\n>\r\n> > perhaps it would be possible to preserve debug info when -g (or -debug, etc) is\r\n> > present as opposed to having -o- (which appears when --chatty is on) ?\r\n>\r\n> I can't make out any meaning from the above.\r\n>\r\n> Judging by the error message, the problem is that rdmd deletes object (.o) files after a successful build.\r\n\r\nTried this today on OSX and could reproduce the issue. The `dwarfdump` output seems correct but the debugger (lldb in my case) seems not to be able to link it to the source code (e.g. `b _Dmain` gives ASM output.)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/428",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/428/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/428/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/428/events",
    "html_url": "https://github.com/dlang/tools/issues/428",
    "id": 782670913,
    "node_id": "MDU6SXNzdWU3ODI2NzA5MTM=",
    "number": 428,
    "title": "rdmd should compile package at a time",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 881835371,
        "node_id": "MDU6TGFiZWw4ODE4MzUzNzE=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Enhancement",
        "name": "Type.Enhancement",
        "color": "c5def5",
        "default": false,
        "description": "An improvement to an existing functionality"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T19:31:02Z",
    "updated_at": "2021-01-09T19:31:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=14654\r\n\r\nUser @andralex reported (2015-Jun-05 16:10:40):\r\n> rdmd builds the given file and all of its dependents in one shot. For large projects, this becomes problematic because of many files are built unnecessarily if one file is touched.\r\n>\r\n> One emerging pattern is to build one package (= directory) at a time, Haskell/Rust style. That allows users to organize dependencies in a scalable manner.\r\n>\r\n> rdmd would collect the dependency graph, \"color\" the files have been affected by the changed files since last build, and then carve the entire file set by directory. If at least one file has been colored in a directory, that directory needs to be rebuilt.\r\n>\r\n> This is a high impact project because it would instantly improve the lot of all rdmd users, and scales rdmd up for larger builds.\r\n\r\nUser @CyberShadow responded (2015-Jun-06 16:16:41):\r\n> If we want to improve build times with rdmd, the best thing we can do is get rid of rdmd (and only leave it as a thin wrapper around dmd). This is because rdmd needs to run dmd -o- to get the dependency graph, and then run dmd again to actually build the program. This means that lexing, parsing, semantics - everything except code gen and linking - must happen twice. For template or mixin-heavy code, this nearly doubles compilation time.\r\n\r\nUser @andralex responded (2015-Jun-06 16:46:38):\r\n> (In reply to Vladimir Panteleev from comment 1)\r\n> > If we want to improve build times with rdmd, the best thing we can do is get\r\n> > rid of rdmd (and only leave it as a thin wrapper around dmd). This is\r\n> > because rdmd needs to run dmd -o- to get the dependency graph, and then run\r\n> > dmd again to actually build the program. This means that lexing, parsing,\r\n> > semantics - everything except code gen and linking - must happen twice. For\r\n> > template or mixin-heavy code, this nearly doubles compilation time.\r\n>\r\n> This improvement stands.\r\n\r\nUser @CyberShadow responded (2015-Jun-06 16:48:24):\r\n> Yes, they are orthogonal. But:\r\n>\r\n> 1. It is potentially higher-impact. Even with per-package compilation, DMD will still need to lex/parse/etc. ALL modules.\r\n>\r\n> 2. Any improvements we make now to rdmd may be harder to migrate into dmd\r\n\r\nUser @andralex responded (2015-Jun-06 16:58:03):\r\n> (In reply to Vladimir Panteleev from comment 3)\r\n> > Yes, they are orthogonal. But:\r\n> >\r\n> > 1. It is potentially higher-impact. Even with per-package compilation, DMD\r\n> > will still need to lex/parse/etc. ALL modules.\r\n>\r\n> It's almost surprising rdmd is so immensely useful, eh :o).\r\n>\r\n> BTW there was work on collecting dependencies while actually building. One nice solution would be for dmd -v to generate a line at the end of imports to mean \"done\". Then rdmd can run dmd concurrently and terminate if no need to generate code.\r\n>\r\n> > 2. Any improvements we make now to rdmd may be harder to migrate into dmd\r\n>\r\n> I see it as the polar opposite. Improvements in rdmd clarify what sort of primitives and interfaces we need for highly modular compilation.\r\n\r\nUser @ag0aep6g responded (2015-Jun-14 22:52:52):\r\n> I implemented an alternative mentioned in the forum discussion: Compile all outdated files, and only those, with one compiler invocation to multiple object files.\r\n>\r\n> https://github.com/D-Programming-Language/tools/pull/170",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/dlang/tools/issues/429",
    "repository_url": "https://api.github.com/repos/dlang/tools",
    "labels_url": "https://api.github.com/repos/dlang/tools/issues/429/labels{/name}",
    "comments_url": "https://api.github.com/repos/dlang/tools/issues/429/comments",
    "events_url": "https://api.github.com/repos/dlang/tools/issues/429/events",
    "html_url": "https://github.com/dlang/tools/issues/429",
    "id": 782692525,
    "node_id": "MDU6SXNzdWU3ODI2OTI1MjU=",
    "number": 429,
    "title": "RDMD: -g switch produces linker error",
    "user": {
      "login": "dlang-bugzilla-migration",
      "id": 66412931,
      "node_id": "MDQ6VXNlcjY2NDEyOTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66412931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlang-bugzilla-migration",
      "html_url": "https://github.com/dlang-bugzilla-migration",
      "followers_url": "https://api.github.com/users/dlang-bugzilla-migration/followers",
      "following_url": "https://api.github.com/users/dlang-bugzilla-migration/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlang-bugzilla-migration/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlang-bugzilla-migration/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlang-bugzilla-migration/subscriptions",
      "organizations_url": "https://api.github.com/users/dlang-bugzilla-migration/orgs",
      "repos_url": "https://api.github.com/users/dlang-bugzilla-migration/repos",
      "events_url": "https://api.github.com/users/dlang-bugzilla-migration/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlang-bugzilla-migration/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1971102559,
        "node_id": "MDU6TGFiZWwxOTcxMTAyNTU5",
        "url": "https://api.github.com/repos/dlang/tools/labels/Prio.3.Normal",
        "name": "Prio.3.Normal",
        "color": "CCAA01",
        "default": false,
        "description": "A bug that is neither a blocker nor a regression"
      },
      {
        "id": 1973581673,
        "node_id": "MDU6TGFiZWwxOTczNTgxNjcz",
        "url": "https://api.github.com/repos/dlang/tools/labels/T.RDMD",
        "name": "T.RDMD",
        "color": "3ac448",
        "default": false,
        "description": "Issues that apply only to rdmd"
      },
      {
        "id": 537492855,
        "node_id": "MDU6TGFiZWw1Mzc0OTI4NTU=",
        "url": "https://api.github.com/repos/dlang/tools/labels/Type.Bug",
        "name": "Type.Bug",
        "color": "ffcccc",
        "default": false,
        "description": "Things don't work as they were intended to, or the way they were intended to work doesn't make sense"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-09T21:57:08Z",
    "updated_at": "2021-01-09T21:57:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Transferred from**: https://issues.dlang.org/show_bug.cgi?id=15533\r\n\r\nUser `golovanov_alexey` reported (2016-Jan-09 09:34:01):\r\n> Created [attachment 1572](https://github.com/dlang/tools/files/5791878/rdmd_import_bug.zip)\r\n>\r\n> reduced test case (see moduleB import)\r\n>\r\n> From forum: http://forum.dlang.org/thread/causshkknlxqlbqrbnkv@forum.dlang.org\r\n>\r\n> OS: Windows 7 (32 bit)\r\n> DMD: 2.069.2 and 2.070.0-b1\r\n> RDMD: build 20160103\r\n>\r\n> Problem: import inside function produced linker error then -g switch used.\r\n> Test files in attach:\r\n>\r\n> moduleA.d\r\n> test\\moduleB.d\r\n> test\\moduleC.d\r\n>\r\n> ```D\r\n> module moduleA;\r\n>\r\n> public void funcA () {\r\n>   import test.moduleB: funcB;\r\n>   return;\r\n> }\r\n>\r\n> void main(string[] args) {\r\n>   return;\r\n> }\r\n> ```\r\n>\r\n> ```D\r\n> module test.moduleB;\r\n>\r\n> //import test.moduleC: funcC;  //this works\r\n>\r\n> public void funcB () {\r\n>   import test.moduleC: funcC;  //linker error\r\n>   funcC();\r\n>\r\n>   return;\r\n> }\r\n> ```\r\n>\r\n> ```D\r\n> module test.moduleC;\r\n>\r\n> public void funcC () {\r\n>   return;\r\n> }\r\n> ```\r\n>\r\n> ```shell\r\n> C:\\dmd2\\windows\\bin\\rdmd.exe moduleA.d\r\n> //no errors, moduleA.exe created\r\n>\r\n>\r\n> C:\\dmd2\\windows\\bin\\rdmd.exe -g moduleA.d\r\n> Copyright (C) Digital Mars 1989-2013  All rights reserved.\r\n> http://www.digitalmars.com/ctg/optlink.html\r\n> C:\\Users\\user\\AppData\\Local\\Temp\\.rdmd\\rdmd-moduleA.d-D3D7676836384146D1D9D907CF20EC26\\objs\\moduleA.exe.obj(moduleA.exe)\r\n>  Error 42: Symbol Undefined _D4test7moduleC5funcCFZv\r\n> --- errorlevel 1\r\n> ```\r\n> Problem disappear, then i move import in `test.moduleB` to global level:\r\n>\r\n> ```D\r\n> module test.moduleB;\r\n>\r\n> import test.moduleC: funcC;  //this works\r\n>\r\n> public void funcB () {\r\n>   //import test.moduleC: funcC;  //linker error\r\n>   funcC();\r\n>\r\n>   return;\r\n> }\r\n> ```\r\n\r\nUser `golovanov_alexey` responded (2016-Jan-16 09:34:43):\r\n> RDMD in both cases produces same rdmd.deps file in corresponding work dir.\r\n> And those rdmd.deps not contains any mention of moduleC.\r\n>\r\n> Command `dmd -deps=moduleA.deps moduleA.d`\r\n> produces `moduleA.deps` file, which not contains any mention of moduleC too.\r\n>\r\n> Is this DMD bug instead of RDMD ?\r\n\r\nUser `golovanov_alexey` responded (2016-Jan-16 16:57:47):\r\n> It seems this is old DMD bug\r\n> \"https://issues.dlang.org/show_bug.cgi?id=7016 - local import does not create -deps dependency\"\r\n\r\nUser `golovanov_alexey` responded (2017-May-20 10:36:09):\r\n> No. [Issue 7016](https://issues.dlang.org/show_bug.cgi?id=7016) fixed, but this 15533 sill exists.\r\n>\r\n> DMD32 D Compiler v2.075.0-master-f546675.\r\n> Reduced test case.\r\n> ```powershell\r\n> C:\\dmd2\\windows\\bin\\rdmd.exe moduleA.d\r\n> //no errors, moduleA.exe created\r\n>\r\n>\r\n> C:\\dmd2\\windows\\bin\\rdmd.exe -g moduleA.d\r\n> OPTLINK (R) for Win32  Release 8.00.17\r\n> Copyright (C) Digital Mars 1989-2013  All rights reserved.\r\n> http://www.digitalmars.com/ctg/optlink.html\r\n> C:\\Users\\gav\\AppData\\Local\\Temp\\.rdmd\\rdmd-moduleA.d-8C1729D9769E4E70D93C65D738058ED2\\objs\\moduleA.exe.obj(moduleA.exe)\r\n>\r\n>  Error 42: Symbol Undefined _D4test7moduleC5funcCFZv\r\n> Error: linker exited with status 1\r\n> ```\r\n\r\nReproduced locally (OSX), the code works with `dmd -i` but not with `rdmd`.",
    "performed_via_github_app": null
  }
]
